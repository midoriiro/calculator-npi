{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "API: Install Dependencies",
            "type": "shell",
            "command": "poetry install",
            "options": {
                "cwd": "${workspaceFolder}/api",
            },
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "API: Run API",
            "type": "shell",
            "command": "poetry run uvicorn rpn_calculator.main:app --reload",
            "options": {
                "cwd": "${workspaceFolder}/api",
                "env": {
                    "ENVIRONMENT": "${workspaceFolder}/.env.dev"
                }
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "API: Run Unit Tests",
            "type": "shell",
            "command": "poetry run pytest tests/unit",
            "options": {
                "cwd": "${workspaceFolder}/api",
            },
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "API: Run Unit Tests with Coverage",
            "type": "shell",
            "command": "poetry run pytest --cov=rpn_calculator tests/unit",
            "options": {
                "cwd": "${workspaceFolder}/api",
            },
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "API: Run Integration Tests",
            "type": "shell",
            "command": "poetry run pytest tests/integration || exit 0",
            "options": {
                "cwd": "${workspaceFolder}/api",
                "env": {
                    "ENV_FILE_PATH": "${workspaceFolder}/.env.test"
                }
            },
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": [],
            "dependsOn": [
                "Compose: Wait for API"
            ],
            "dependsOrder": "sequence"
        },
        {
            "label": "API: Run Integration Tests with Cleanup",
            "type": "shell",
            "command": "echo 'Tests termin√©s'",
            "dependsOn": [
                "Compose: Rebuild",
                "Compose: Up (test environment)",
                "API: Run Integration Tests",
                "Compose: Down"
            ],
            "dependsOrder": "sequence",
            "group": {
                "kind": "test",
                "isDefault": true
            }
        },
        {
            "label": "API: Format Code",
            "type": "shell",
            "command": "poetry run black . && poetry run isort .",
            "options": {
                "cwd": "${workspaceFolder}/api",
            },
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "API: Lint Code",
            "type": "shell",
            "command": "poetry run flake8",
            "options": {
                "cwd": "${workspaceFolder}/api",
            },
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "API: Add Dependency",
            "type": "shell",
            "command": "poetry add ${input:packageName}",
            "options": {
                "cwd": "${workspaceFolder}/api",
            },
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "API: Add Dev Dependency",
            "type": "shell",
            "command": "poetry add --group dev ${input:packageName}",
            "options": {
                "cwd": "${workspaceFolder}/api",
            },
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Compose: Up",
            "type": "shell",
            "command": "compose --env-file ${workspaceFolder}/.env.dev up",
            "options": {
                "cwd": "${workspaceFolder}",
            },
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Compose: Up (test environment)",
            "type": "shell",
            "command": "compose --env-file ${workspaceFolder}/.env.test up --detach",
            "options": {
                "cwd": "${workspaceFolder}",
            },
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Compose: Down",
            "type": "shell",
            "command": "compose down",
            "options": {
                "cwd": "${workspaceFolder}",
            },
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Compose: Rebuild",
            "type": "shell",
            "command": "compose --env-file ${workspaceFolder}/.env.dev build",
            "options": {
                "cwd": "${workspaceFolder}",
            },
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Compose: Rebuild (no cache)",
            "type": "shell",
            "command": "compose --env-file ${workspaceFolder}/.env.dev build --no-cache",
            "options": {
                "cwd": "${workspaceFolder}",
            },
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Compose: Wait for API",
            "type": "shell",
            "command": "curl --retry 10 --retry-all-errors -f http://host.containers.internal:8000/health || exit 1",
            "dependsOn": [
                "Compose: Up (test environment)"
            ],
            "dependsOrder": "sequence"
        },
    ],
    "inputs": [
        {
            "id": "packageName",
            "description": "Package name to add",
            "default": "",
            "type": "promptString"
        }
    ]
}